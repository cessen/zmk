/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/ext_power.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/rgb.h>

#define HYPER LC(LS(LG(LALT)))

// layers
#define DEFAULT 0
#define SYMBOLS 1
#define NAVIGATION 2
#define PADS 3
#define MAGIC 4

/ {
    behaviors {
        // For the "layer" key, it'd nice to be able to use it as either a shift or a toggle.
        // Configure it as a tap dance, so the first tap (or hold) is a &mo and the second tap is a &to
        layer_td: tap_dance_0 {
            compatible = "zmk,behavior-tap-dance";
            label = "LAYER_TAP_DANCE";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&mo PADS>, <&to PADS>;
        };

        magic: magic_hold_tap {
            compatible = "zmk,behavior-hold-tap";
            label = "MAGIC_HOLD_TAP";
            #binding-cells = <2>;
            flavor = "tap-preferred";
            tapping-term-ms = <200>;
            bindings = <&mo>, <&rgb_ug_status_macro>;
        };
    };

    macros {
        rgb_ug_status_macro: rgb_ug_status_macro_0 {
            label = "RGB_UG_STATUS";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&rgb_ug RGB_STATUS>;
        };

        bt_0: bt_profile_macro_0 {
            label = "BT_0";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&out OUT_BLE>,
                  <&bt BT_SEL 0>;
        };

        bt_1: bt_profile_macro_1 {
            label = "BT_1";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&out OUT_BLE>,
                  <&bt BT_SEL 1>;
        };

        bt_2: bt_profile_macro_2 {
            label = "BT_2";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&out OUT_BLE>,
                  <&bt BT_SEL 2>;
        };

        bt_3: bt_profile_macro_3 {
            label = "BT_3";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&out OUT_BLE>,
                  <&bt BT_SEL 3>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // --------------------------------------------------------------------------------------------------------------------------------------------------------
            // | none  | none | none | BRI_DN | BRI_UP |                                                                     | MUTE  | VOL_DN | VOL_UP | none  | none |
            // |  `    |  1   |  2   |   3    |   4    |  5   |                                                       |  6   |   7   |   8    |   9    |   0   |   -  |
            // |  TAB  |  Q   |  W   |   E    |   R    |  T   |                                                       |  Y   |   U   |   I    |   O    |   P   |   =  |
            // |  ESC  |  A   |  S   |   D    |   F    |  G   |                                                       |  H   |   J   |   K    |   L    |   ;   |   '  |
            // | none  |  Z   |  X   |   C    |   V    |  B   | LSHFT | LCTRL   | LALT |  | none    | none    | RET   |  N   |   M   |   ,    |   .    |   /   |   \  |
            // | MAGIC | none | none |  none  |  none  |      | BSPC  | PAD LAY | LGUI |  | NAV LAY | SYM LAY | SPACE |      |  DEL  |   [    |   ]    | none  | none |

            bindings = <
            &none          &none    &none       &kp C_BRI_DN  &kp C_BRI_UP                                                                                           &kp C_MUTE  &kp C_VOL_DN  &kp C_VOL_UP       &none       &none
            &kp GRAVE      &kp N1   &kp N2      &kp N3        &kp N4       &kp N5                                                                            &kp N6  &kp N7      &kp N8        &kp N9      &kp N0      &kp MINUS
            &kp TAB        &kp Q    &kp W       &kp E         &kp R        &kp T                                                                             &kp Y   &kp U       &kp I         &kp O       &kp P       &kp EQUAL
            &kp ESC        &kp A    &kp S       &kp D         &kp F        &kp G                                                                             &kp H   &kp J       &kp K         &kp L       &kp SEMI    &kp SQT
            &none          &kp Z    &kp X       &kp C         &kp V        &kp B   &sk LSHFT  &sk LCTRL  &sk LALT   &none           &none        &kp RET     &kp N   &kp M       &kp COMMA     &kp DOT     &kp FSLH    &kp BSLH
            &magic MAGIC 0 &none    &none       &none         &none                &kp BSPC   &sl PADS   &sk LGUI   &sl NAVIGATION  &sl SYMBOLS  &kp SPACE           &kp DEL     &kp LBKT      &kp RBKT    &none       &none
            >;
        };

        symbols_layer {
            // ----------------------------------------------------------------------------------------------------------------------------------------
            // | none | none | none | none | none |                                                                | none | none | none | none | none |
            // | none | none | none | none | none | none |                                                  | none | none | none | none | none | none |
            // | none | none |  @   |  #   |  $   |  %   |                                                  |  ^   |  &   |  |   |  ~   | none | none |
            // | none | none |  {   |  [   |  (   |  <   |                                                  |  >   |  )   |  ]   |  }   |  \   | none |
            // | none | none |  =   |  -   |  +   |  /   | trans | trans | trans |  | trans | trans | trans |  *   |  _   |  !   |  `   | none | none |
            // | none | none | none | none | none |      | trans | trans | trans |  | trans | trans | trans |      | none | none | none | none | none |

            bindings = <
            &none   &none   &none        &none      &none                                                                                             &none         &none        &none         &none     &none
            &none   &none   &none        &none      &none         &none                                                                  &none        &none         &none        &none         &none     &none
            &none   &none   &kp LS(N2)   &kp LS(N3) &kp LS(N4)    &kp LS(N5)                                                             &kp LS(N6)   &kp LS(N7)    &kp LS(BSLH) &kp LS(GRAVE) &none     &none
            &none   &none   &kp LS(LBKT) &kp LBKT   &kp LS(N9)    &kp LS(COMMA)                                                          &kp LS(DOT)  &kp LS(N0)    &kp RBKT     &kp LS(RBKT)  &kp BSLH  &none
            &none   &none   &kp EQUAL    &kp MINUS  &kp LS(EQUAL) &kp FSLH      &trans   &trans   &trans      &trans   &trans   &trans   &kp LS(N8)   &kp LS(MINUS) &kp LS(N1)   &kp GRAVE     &none     &none
            &none   &none   &none        &none      &none                       &trans   &trans   &trans      &trans   &trans   &trans                &none         &none        &none         &none     &none
            >;
        };

        navigation_layer {
            // ----------------------------------------------------------------------------------------------------------------------------------------
            // | none | none | none  | none | none |                                                                   | Ins  | Prt Scrn | Scrl Lck | Pause/Brk | none |
            // | none | none | none  | none | none | none |                                                  | none    | none |   none   |   none   | none      | none |
            // | none | none | none  | none | none | none |                                                  | Page Up | Home |    Up    |   End    | none      | none |
            // | none | none | SHIFT | CTRL | ALT  | none |                                                  | Page Dn | Left |   Down   |   Right  | none      | none |
            // | none | none | none  | none | none | none | trans | trans | trans |  | trans | trans | trans | none    | none |   none   |   none   | none      | none |
            // | none | none | none  | none | none |      | trans | trans | trans |  | trans | trans | trans |         | none |   none   |   none   | none      | none |

            bindings = <
            &none   &none   &none      &none      &none                                                                                &kp INS   &kp PSCRN  &kp SLCK  &kp PAUSE_BREAK   &none
            &none   &none   &none      &none      &none    &none                                                            &none      &none     &none     &none      &none             &none
            &none   &none   &none      &none      &none    &none                                                            &kp PG_UP  &kp HOME  &kp UP    &kp END    &none             &none
            &none   &none   &kp LSHFT  &kp LCTRL  &kp LALT &none                                                            &kp PG_DN  &kp LEFT  &kp DOWN  &kp RIGHT  &none             &none
            &none   &none   &none      &none      &none    &none   &trans   &trans   &trans      &trans   &trans   &trans   &none      &none     &none     &none      &none             &none
            &none   &none   &none      &none      &none            &trans   &trans   &trans      &trans   &trans   &trans              &none     &none     &none      &none             &none
            >;
        };

        pads_layer {
            bindings = <
            &kp F2    &kp F3  &kp F4     &kp F5     &kp F6                                                                               &kp F7       &kp F8       &kp F9        &kp F10         &kp F11
            &kp F1    &none   &none      &none      &none       &none                                                            &none   &kp KP_NUM   &kp KP_EQUAL &kp KP_DIVIDE &kp KP_MULTIPLY &kp F12
            &none     &none   &kp HOME   &kp UP     &kp END     &kp PG_UP                                                        &none   &kp KP_N7    &kp KP_N8    &kp KP_N9     &kp KP_MINUS    &none
            &kp CAPS  &none   &kp LEFT   &kp DOWN   &kp RIGHT   &kp PG_DN                                                        &none   &kp KP_N4    &kp KP_N5    &kp KP_N6     &kp KP_PLUS     &none
            &none     &none   &none      &none      &none       &none       &trans  &trans  &trans      &trans  &trans  &trans   &none   &kp KP_N1    &kp KP_N2    &kp KP_N3     &kp KP_ENTER    &none
            &none     &none   &none      &none      &none                   &trans  &trans  &trans      &trans  &trans  &trans           &kp KP_N0    &kp KP_N0    &kp KP_DOT    &kp KP_ENTER    &none
            >;
        };

        magic_layer {
            bindings = <
            &bt BT_CLR        &none               &none           &none           &none                                                                                                           &none      &none      &none      &none      &bt BT_CLR_ALL
            &none             &none               &none           &none           &none           &none                                                                                &none      &none      &none      &none      &none      &none
            &none             &rgb_ug RGB_SPI     &rgb_ug RGB_SAI &rgb_ug RGB_HUI &rgb_ug RGB_BRI &rgb_ug RGB_TOG                                                                      &none      &none      &none      &none      &none      &none
            &bootloader       &rgb_ug RGB_SPD     &rgb_ug RGB_SAD &rgb_ug RGB_HUD &rgb_ug RGB_BRD &rgb_ug RGB_EFF                                                                      &none      &none      &none      &none      &none      &bootloader
            &sys_reset        &none               &none           &none           &none           &none           &bt_2     &bt_3     &none            &none     &none     &none       &none      &none      &none      &none      &none      &sys_reset
            &none             &none               &none           &none           &none                           &bt_0     &bt_1     &out OUT_USB     &none     &none     &none                  &none      &none      &none      &none      &none
            >;
        };

        // none_layer {
        //     // ----------------------------------------------------------------------------------------------------------------------------------------
        //     // | none | none | none | none | none |                                                                | none | none | none | none | none |
        //     // | none | none | none | none | none | none |                                                  | none | none | none | none | none | none |
        //     // | none | none | none | none | none | none |                                                  | none | none | none | none | none | none |
        //     // | none | none | none | none | none | none |                                                  | none | none | none | none | none | none |
        //     // | none | none | none | none | none | none | trans | trans | trans |  | trans | trans | trans | none | none | none | none | none | none |
        //     // | none | none | none | none | none |      | trans | trans | trans |  | trans | trans | trans |      | none | none | none | none | none |
        //
        //     bindings = <
        //     &none   &none   &none   &none   &none                                                                           &none   &none   &none   &none   &none
        //     &none   &none   &none   &none   &none   &none                                                           &none   &none   &none   &none   &none   &none
        //     &none   &none   &none   &none   &none   &none                                                           &none   &none   &none   &none   &none   &none
        //     &none   &none   &none   &none   &none   &none                                                           &none   &none   &none   &none   &none   &none
        //     &none   &none   &none   &none   &none   &none   &trans   &trans   &trans     &trans   &trans   &trans   &none   &none   &none   &none   &none   &none
        //     &none   &none   &none   &none   &none           &trans   &trans   &trans     &trans   &trans   &trans           &none   &none   &none   &none   &none
        //     >;
        // };
    };
};
