/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/ext_power.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/rgb.h>

#define HYPER LC(LS(LG(LALT)))

// layers
#define DEFAULT 0
#define QWERTY 1
#define SYMBOLS 2
#define NAVIGATION 3
#define NUMPAD 4
#define MAGIC 5

/ {
    behaviors {
        // Press once for navigation later, twice for numpad layer.
        nav_pad_td: tap_dance_0 {
            compatible = "zmk,behavior-tap-dance";
            label = "LAYER_TAP_DANCE";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&mo NAVIGATION>, <&mo NUMPAD>;
        };

        // Press once for alt, twice for super.
        alt_super_td: tap_dance_1 {
            compatible = "zmk,behavior-tap-dance";
            label = "ALT_SUPER_TAP_DANCE";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&kp LALT>, <&kp LGUI>;
        };

        // Backspace is backspace, Shift-Backspace is Delete.
        bspc_del: backspace_delete {
            compatible = "zmk,behavior-mod-morph";
            label = "BACKSPACE_DELETE";
            #binding-cells = <0>;
            bindings = <&kp BSPC>, <&kp DEL>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };

        magic: magic_hold_tap {
            compatible = "zmk,behavior-hold-tap";
            label = "MAGIC_HOLD_TAP";
            #binding-cells = <2>;
            flavor = "tap-preferred";
            tapping-term-ms = <200>;
            bindings = <&mo>, <&rgb_ug_status_macro>;
        };
    };

    macros {
        rgb_ug_status_macro: rgb_ug_status_macro_0 {
            label = "RGB_UG_STATUS";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&rgb_ug RGB_STATUS>;
        };

        bt_0: bt_profile_macro_0 {
            label = "BT_0";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&out OUT_BLE>,
                  <&bt BT_SEL 0>;
        };

        bt_1: bt_profile_macro_1 {
            label = "BT_1";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&out OUT_BLE>,
                  <&bt BT_SEL 1>;
        };

        bt_2: bt_profile_macro_2 {
            label = "BT_2";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&out OUT_BLE>,
                  <&bt BT_SEL 2>;
        };

        bt_3: bt_profile_macro_3 {
            label = "BT_3";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&out OUT_BLE>,
                  <&bt BT_SEL 3>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // A tweaked Engram layout.
            // -------------------------------------------------------------------------------------------------------------------------------------------------------------------
            // | none  | none | none | BRI_DN | BRI_UP |                                                                          | MUTE  | VOL_DN | VOL_UP | none  | QWERTY TOG |
            // | none  |  1   |  2   |   3    |   4    |    5     |                                                        |  6   |   7   |   8    |   9    |   0   |    none    |
            // |  TAB  |  B   |  Y   |   O    |   U    |    ;     |                                                        |  .   |   L   |   D    |   W    |   V   |     Z      |
            // |  ESC  |  C   |  I   |   E    |   A    |    '     |                                                        |  ,   |   H   |   T    |   S    |   N   |     Q      |
            // | none  |  G   |  X   |   J    |   K    | BSPC/DEL | none  | none  | BSPC/DEL |  |  RET   |  none   | none  | RET  |   R   |   M    |   F    |   P   |    none    |
            // | MAGIC | none | none |  none  |  none  |          | LSHFT | LCTRL | LALT/SUP |  | NP LAY | SYM LAY | SPACE |      |  DEL  |  none  |  none  | none  |    none    |

            bindings = <
            &none          &none    &none   &kp C_BRI_DN  &kp C_BRI_UP                                                                                                  &kp C_MUTE  &kp C_VOL_DN  &kp C_VOL_UP  &none   &tog QWERTY
            &none          &kp N1   &kp N2  &kp N3        &kp N4        &kp N5                                                                                &kp N6    &kp N7      &kp N8        &kp N9        &kp N0  &none
            &kp TAB        &kp B    &kp Y   &kp O         &kp U         &kp SEMI                                                                              &kp DOT   &kp L       &kp D         &kp W         &kp V   &kp Z
            &kp ESC        &kp C    &kp I   &kp E         &kp A         &kp SQT                                                                               &kp COMMA &kp H       &kp T         &kp S         &kp N   &kp Q
            &none          &kp G    &kp X   &kp J         &kp K         &bspc_del  &none      &none      &bspc_del       &kp RET      &none        &none      &kp RET   &kp R       &kp M         &kp F         &kp P   &none
            &magic MAGIC 0 &none    &none   &none         &none                    &sk LSHFT  &sk LCTRL  &alt_super_td   &nav_pad_td  &sl SYMBOLS  &kp SPACE            &none       &none         &none         &none   &none
            >;
        };

        qwerty_layer {
            // ------------------------------------------------------------------------------------------------------------------------------------------------------
            // | trans | trans | trans | trans  | trans  |                                                                  | trans | trans | trans | trans | trans |
            // | trans | trans | trans | trans  | trans  | trans |                                                  | trans | trans | trans | trans | trans | trans |
            // | trans |  Q    |  W    |   E    |   R    |   T   |                                                  |   Y   |   U   |   I   |   O   |   P   |   =   |
            // | trans |  A    |  S    |   D    |   F    |   G   |                                                  |   H   |   J   |   K   |   L   |   ;   |   '   |
            // | trans |  Z    |  X    |   C    |   V    |   B   | trans | trans | trans |  | trans | trans | trans |   N   |   M   |   ,   |   .   |   /   | trans |
            // | trans | trans | trans | trans  | trans  |       | trans | trans | trans |  | trans | trans | trans |       | trans |   [   |   ]   |   \   | trans |

            bindings = <
            &trans  &trans  &trans  &trans  &trans                                                                    &trans  &trans     &trans    &trans    &trans
            &trans  &trans  &trans  &trans  &trans  &trans                                                    &trans  &trans  &trans     &trans    &trans    &trans
            &trans  &kp Q   &kp W   &kp E   &kp R   &kp T                                                     &kp Y   &kp U   &kp I      &kp O     &kp P     &kp EQUAL
            &trans  &kp A   &kp S   &kp D   &kp F   &kp G                                                     &kp H   &kp J   &kp K      &kp L     &kp SEMI  &kp SQT
            &trans  &kp Z   &kp X   &kp C   &kp V   &kp B   &trans  &trans  &trans   &trans  &trans  &trans   &kp N   &kp M   &kp COMMA  &kp DOT   &kp FSLH  &none
            &trans  &trans  &trans  &trans  &trans          &trans  &trans  &trans   &trans  &trans  &trans           &trans  &kp LBKT   &kp RBKT  &kp BSLH  &trans
            >;
        };

        symbols_layer {
            // -------------------------------------------------------------------------------------------------------------------------------------------------
            // | none | none | none | none | none |                                                                | Ins  | PrtScr | ScrLk | Pause | Caps Lock |
            // | none | none | none | none | none | none |                                                  | none | none |  none  |  none | none  |   none    |
            // | none | none |  @   |  #   |  $   |  %   |                                                  |  ^   |  &   |   |    |   ~   | none  |   none    |
            // | none | none |  \   |  /   |  -   |  *   |                                                  |  =   |  _   |   !    |   ?   | none  |   none    |
            // | none | none |  [   |  {   |  (   |  +   | trans | trans | trans |  | trans | trans | trans |  `   |  )   |   }    |   ]   | none  |   none    |
            // | none | none | none | none | none |      | trans | trans | trans |  | trans | trans | trans |      | none |  none  |  none | none  |   none    |

            bindings = <
            &none   &none  &none       &none         &none                                                                                   &kp INS        &kp PSCRN     &kp SLCK       &kp PAUSE_BREAK  &kp CAPS
            &none   &none  &none       &none         &none       &none                                                           &none       &none          &none         &none          &none            &none
            &none   &none  &kp LS(N2)  &kp LS(N3)    &kp LS(N4)  &kp LS(N5)                                                      &kp LS(N6)  &kp LS(N7)     &kp LS(BSLH)  &kp LS(GRAVE)  &none            &none
            &none   &none  &kp BSLH    &kp FSLH      &kp MINUS   &kp LS(N8)                                                      &kp EQUAL   &kp LS(MINUS)  &kp LS(N1)    &kp LS(FSLH)   &none            &none
            &none   &none  &kp LBKT    &kp LS(LBKT)  &kp LS(N9)  &kp LS(EQUAL)  &trans  &trans  &trans   &trans  &trans  &trans  &kp GRAVE   &kp LS(N0)     &kp LS(RBKT)  &kp RBKT       &none            &none
            &none   &none  &none       &none         &none                      &trans  &trans  &trans   &trans  &trans  &trans              &none          &none         &none          &none            &none
            >;
        };

        navigation_layer {
            // -------------------------------------------------------------------------------------------------------------------------------------------------
            // | none | none | none  | none | none  |                                                                      | none | none | none  | none | none |
            // | none | none | none  | none | none  | none    |                                                  | none    | none | none | none  | none | none |
            // | none | none | Home  |  Up  | End   | Page Up |                                                  | Page Up | Home |  Up  | End   | none | none |
            // | none | none | Left  | Down | Right | Page Dn |                                                  | Page Dn | Left | Down | Right | none | none |
            // | none | none | none  | none | none  | none    | trans | trans | trans |  | trans | trans | trans | none    | none | none | none  | none | none |
            // | none | none | none  | none | none  |         | trans | trans | trans |  | trans | trans | trans |         | none | none | none  | none | none |

            bindings = <
            &kp F2  &kp F3  &kp F4    &kp F5    &kp F6                                                                                &kp F7    &kp F8    &kp F9     &kp F10  &kp F11
            &kp F1  &none   &none     &none     &none      &none                                                           &none      &none     &none     &none      &none    &kp F12
            &none   &none   &kp HOME  &kp UP    &kp END    &kp PG_UP                                                       &kp PG_UP  &kp HOME  &kp UP    &kp END    &none    &none
            &none   &none   &kp LEFT  &kp DOWN  &kp RIGHT  &kp PG_DN                                                       &kp PG_DN  &kp LEFT  &kp DOWN  &kp RIGHT  &none    &none
            &none   &none   &none     &none     &none      &none      &trans   &trans   &trans   &trans   &trans   &trans  &none      &none     &none     &none      &none    &none
            &none   &none   &none     &none     &none                 &trans   &trans   &trans   &trans   &trans   &trans             &none     &none     &none      &none    &none
            >;
        };

        numpad_layer {
            bindings = <
            &kp F2  &kp F3     &kp F4       &kp F5        &kp F6                                                                           &kp F7       &kp F8       &kp F9        &kp F10         &kp F11
            &kp F1  &kp KP_NUM &kp KP_EQUAL &kp KP_DIVIDE &kp KP_MULTIPLY  &none                                                   &none   &kp KP_NUM   &kp KP_EQUAL &kp KP_DIVIDE &kp KP_MULTIPLY &kp F12
            &none   &kp KP_N7  &kp KP_N8    &kp KP_N9     &kp KP_MINUS     &none                                                   &none   &kp KP_N7    &kp KP_N8    &kp KP_N9     &kp KP_MINUS    &none
            &none   &kp KP_N4  &kp KP_N5    &kp KP_N6     &kp KP_PLUS      &none                                                   &none   &kp KP_N4    &kp KP_N5    &kp KP_N6     &kp KP_PLUS     &none
            &none   &kp KP_N1  &kp KP_N2    &kp KP_N3     &kp KP_ENTER     &none  &trans  &trans  &trans   &trans  &trans  &trans  &none   &kp KP_N1    &kp KP_N2    &kp KP_N3     &kp KP_ENTER    &none
            &none   &kp KP_N0  &kp KP_N0    &kp KP_DOT    &kp KP_ENTER            &trans  &trans  &trans   &trans  &trans  &trans          &kp KP_N0    &kp KP_N0    &kp KP_DOT    &kp KP_ENTER    &none
            >;
        };

        magic_layer {
            bindings = <
            &bt BT_CLR        &none               &none           &none           &none                                                                                                           &none      &none      &none      &none      &bt BT_CLR_ALL
            &none             &none               &none           &none           &none           &none                                                                                &none      &none      &none      &none      &none      &none
            &none             &rgb_ug RGB_SPI     &rgb_ug RGB_SAI &rgb_ug RGB_HUI &rgb_ug RGB_BRI &rgb_ug RGB_TOG                                                                      &none      &none      &none      &none      &none      &none
            &bootloader       &rgb_ug RGB_SPD     &rgb_ug RGB_SAD &rgb_ug RGB_HUD &rgb_ug RGB_BRD &rgb_ug RGB_EFF                                                                      &none      &none      &none      &none      &none      &bootloader
            &sys_reset        &none               &none           &none           &none           &none           &bt_2     &bt_3     &none            &none     &none     &none       &none      &none      &none      &none      &none      &sys_reset
            &none             &none               &none           &none           &none                           &bt_0     &bt_1     &out OUT_USB     &none     &none     &none                  &none      &none      &none      &none      &none
            >;
        };

        // none_layer {
        //     // ----------------------------------------------------------------------------------------------------------------------------------------
        //     // | none | none | none | none | none |                                                                | none | none | none | none | none |
        //     // | none | none | none | none | none | none |                                                  | none | none | none | none | none | none |
        //     // | none | none | none | none | none | none |                                                  | none | none | none | none | none | none |
        //     // | none | none | none | none | none | none |                                                  | none | none | none | none | none | none |
        //     // | none | none | none | none | none | none | trans | trans | trans |  | trans | trans | trans | none | none | none | none | none | none |
        //     // | none | none | none | none | none |      | trans | trans | trans |  | trans | trans | trans |      | none | none | none | none | none |
        //
        //     bindings = <
        //     &none   &none   &none   &none   &none                                                                           &none   &none   &none   &none   &none
        //     &none   &none   &none   &none   &none   &none                                                           &none   &none   &none   &none   &none   &none
        //     &none   &none   &none   &none   &none   &none                                                           &none   &none   &none   &none   &none   &none
        //     &none   &none   &none   &none   &none   &none                                                           &none   &none   &none   &none   &none   &none
        //     &none   &none   &none   &none   &none   &none   &trans   &trans   &trans     &trans   &trans   &trans   &none   &none   &none   &none   &none   &none
        //     &none   &none   &none   &none   &none           &trans   &trans   &trans     &trans   &trans   &trans           &none   &none   &none   &none   &none
        //     >;
        // };
    };
};
